{"ast":null,"code":"var _jsxFileName = \"/home/baragu/Documents/search window/src/components/SearchWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport sanityClient from \"@sanity/client\";\nimport searchIcon from '../assets/image.png'; // Adjust the path accordingly\n\n// Initialize Sanity client\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = sanityClient({\n  projectId: \"x98ssp32\",\n  // Replace with your Sanity project ID\n  dataset: \"production\",\n  // Dataset name\n  apiVersion: \"2021-08-31\",\n  // API version date\n  useCdn: true // Use CDN for faster response times\n});\nconst SearchWindow = () => {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalContent, setModalContent] = useState(\"\");\n\n  // Fetch from Sanity when query changes\n  useEffect(() => {\n    const fetchEntries = async () => {\n      if (query.length > 0) {\n        const queryStr = `*[_type in [\"dentalTopics\", \"faq\", \"articles\"] && (title match \"${query}*\" || question match \"${query}*\")]{\n          title,\n          question,\n          description,\n          content,\n          answer,\n          _id\n        }`;\n        try {\n          const results = await client.fetch(queryStr);\n          setResults(results);\n        } catch (error) {\n          console.error(\"Error fetching from Sanity:\", error);\n        }\n      } else {\n        setResults([]);\n      }\n    };\n    fetchEntries();\n  }, [query]);\n  const fetchFromGroqBackend = async () => {\n    if (!query) return; // Prevent empty queries from being sent\n\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/groq\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          query\n        })\n      });\n      const data = await response.json();\n      const aiResult = {\n        _id: \"ai-response\",\n        title: query,\n        // The query becomes the title of the AI response\n        description: data.aiResponse || \"No valid response from AI.\"\n      };\n\n      // Append AI response to the existing results\n      setResults(prevResults => [...prevResults, aiResult]);\n    } catch (error) {\n      console.error(\"Error fetching AI response from backend:\", error);\n    }\n    setLoading(false);\n  };\n\n  // Handle search submission on Enter or button click\n  const handleSearch = async () => {\n    if (query.trim() === \"\") return; // Ensure the query is not empty or just spaces\n    await fetchFromGroqBackend();\n  };\n\n  // Handle pressing \"Enter\" key in the input\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n\n  // Open modal for displaying content\n  const openModal = content => {\n    setModalContent(content);\n    setIsModalOpen(true);\n  };\n\n  // Close modal\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalContent(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center mt-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full max-w-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center border border-indigo-500 rounded-lg shadow-md focus-within:ring-2 focus-within:ring-indigo-400 transition duration-300 ease-in-out bg-tranquil-mist\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          onKeyDown: handleKeyDown // Handle pressing Enter\n          ,\n          className: \"w-full p-4 outline-none bg-transparent\",\n          placeholder: \"Search dental topics...\",\n          \"aria-label\": \"Search for dental topics\" // For screen readers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSearch,\n          className: \"px-4 py-2 bg-royal-velvet text-white rounded-r-lg hover:bg-indigo-600 transition duration-300 transform hover:scale-105\",\n          \"aria-label\": \"Submit Search\" // For screen readers\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: searchIcon,\n            alt: \"Search Icon\",\n            className: \"h-10 w-10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"max-h-80 overflow-y-auto absolute z-10 w-full mt-4 bg-crystal-snow border border-indigo-200 rounded-lg shadow-lg\",\n        children: results.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"p-4 border-b border-gray-100 cursor-pointer hover:bg-serene-sky transition duration-300 ease-in-out\",\n          onClick: () => openModal(`${item.title || item.question}\\n\\n${item.description || item.content || item.answer}`),\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"text-indigo-900\",\n            children: item.title || item.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 text-indigo-700 animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-800 bg-opacity-75 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg p-6 max-w-lg shadow-lg text-gray-800 relative animate-fade-in\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          className: \"absolute top-0 right-0 mt-4 mr-4 text-gray-500 hover:text-gray-700 transition\",\n          children: \"\\u2715 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-indigo-900 text-2xl font-bold mb-2\",\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: modalContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchWindow, \"KaNEymVQzHCODxIpF54xcDhsZcA=\");\n_c = SearchWindow;\nexport default SearchWindow;\nvar _c;\n$RefreshReg$(_c, \"SearchWindow\");","map":{"version":3,"names":["React","useState","useEffect","sanityClient","searchIcon","jsxDEV","_jsxDEV","client","projectId","dataset","apiVersion","useCdn","SearchWindow","_s","query","setQuery","results","setResults","loading","setLoading","isModalOpen","setIsModalOpen","modalContent","setModalContent","fetchEntries","length","queryStr","fetch","error","console","fetchFromGroqBackend","response","method","headers","body","JSON","stringify","data","json","aiResult","_id","title","description","aiResponse","prevResults","handleSearch","trim","handleKeyDown","event","key","openModal","content","closeModal","className","children","type","value","onChange","e","target","onKeyDown","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","map","item","question","answer","_c","$RefreshReg$"],"sources":["/home/baragu/Documents/search window/src/components/SearchWindow.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport sanityClient from \"@sanity/client\";\nimport searchIcon from '../assets/image.png'; // Adjust the path accordingly\n\n// Initialize Sanity client\nconst client = sanityClient({\n  projectId: \"x98ssp32\", // Replace with your Sanity project ID\n  dataset: \"production\", // Dataset name\n  apiVersion: \"2021-08-31\", // API version date\n  useCdn: true, // Use CDN for faster response times\n});\n\nconst SearchWindow = () => {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalContent, setModalContent] = useState(\"\");\n\n  // Fetch from Sanity when query changes\n  useEffect(() => {\n    const fetchEntries = async () => {\n      if (query.length > 0) {\n        const queryStr = `*[_type in [\"dentalTopics\", \"faq\", \"articles\"] && (title match \"${query}*\" || question match \"${query}*\")]{\n          title,\n          question,\n          description,\n          content,\n          answer,\n          _id\n        }`;\n\n        try {\n          const results = await client.fetch(queryStr);\n          setResults(results);\n        } catch (error) {\n          console.error(\"Error fetching from Sanity:\", error);\n        }\n      } else {\n        setResults([]);\n      }\n    };\n\n    fetchEntries();\n  }, [query]);\n\n  const fetchFromGroqBackend = async () => {\n    if (!query) return; // Prevent empty queries from being sent\n\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/groq\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ query }),\n      });\n\n      const data = await response.json();\n      const aiResult = {\n        _id: \"ai-response\",\n        title: query, // The query becomes the title of the AI response\n        description: data.aiResponse || \"No valid response from AI.\",\n      };\n\n      // Append AI response to the existing results\n      setResults((prevResults) => [...prevResults, aiResult]);\n    } catch (error) {\n      console.error(\"Error fetching AI response from backend:\", error);\n    }\n    setLoading(false);\n  };\n\n  // Handle search submission on Enter or button click\n  const handleSearch = async () => {\n    if (query.trim() === \"\") return; // Ensure the query is not empty or just spaces\n    await fetchFromGroqBackend();\n  };\n\n  // Handle pressing \"Enter\" key in the input\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n\n  // Open modal for displaying content\n  const openModal = (content) => {\n    setModalContent(content);\n    setIsModalOpen(true);\n  };\n\n  // Close modal\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalContent(\"\");\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center mt-10\">\n      <div className=\"relative w-full max-w-lg\">\n        {/* Input and Submit Button in One Box */}\n        <div className=\"flex items-center border border-indigo-500 rounded-lg shadow-md focus-within:ring-2 focus-within:ring-indigo-400 transition duration-300 ease-in-out bg-tranquil-mist\">\n          <input\n            type=\"text\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            onKeyDown={handleKeyDown}  // Handle pressing Enter\n            className=\"w-full p-4 outline-none bg-transparent\"\n            placeholder=\"Search dental topics...\"\n            aria-label=\"Search for dental topics\" // For screen readers\n          />\n          <button\n            onClick={handleSearch}\n            className=\"px-4 py-2 bg-royal-velvet text-white rounded-r-lg hover:bg-indigo-600 transition duration-300 transform hover:scale-105\"\n            aria-label=\"Submit Search\" // For screen readers\n          >\n            {/* Display PNG as an Icon - Dental Magnifying Glass */}\n            <img src={searchIcon} alt=\"Search Icon\" className=\"h-10 w-10\" /> {/* Adjusted size to be slightly bigger */}\n          </button>\n        </div>\n\n        {/* Search Results (Sanity and AI Combined) */}\n        {results.length > 0 && (\n          <ul className=\"max-h-80 overflow-y-auto absolute z-10 w-full mt-4 bg-crystal-snow border border-indigo-200 rounded-lg shadow-lg\">\n            {results.map((item) => (\n              <li\n                key={item._id}\n                className=\"p-4 border-b border-gray-100 cursor-pointer hover:bg-serene-sky transition duration-300 ease-in-out\"\n                onClick={() => openModal(`${item.title || item.question}\\n\\n${item.description || item.content || item.answer}`)}\n              >\n                <strong className=\"text-indigo-900\">{item.title || item.question}</strong>\n              </li>\n            ))}\n          </ul>\n        )}\n\n        {/* Loading Indicator */}\n        {loading && (\n          <div className=\"mt-4 text-indigo-700 animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n        )}\n      </div>\n\n      {/* Modal for displaying selected content */}\n      {isModalOpen && (\n        <div className=\"fixed inset-0 bg-gray-800 bg-opacity-75 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 max-w-lg shadow-lg text-gray-800 relative animate-fade-in\">\n            <button\n              onClick={closeModal}\n              className=\"absolute top-0 right-0 mt-4 mr-4 text-gray-500 hover:text-gray-700 transition\"\n            >\n              &#10005; {/* Close button for the modal */}\n            </button>\n            <div className=\"text-lg\">\n              <h2 className=\"text-indigo-900 text-2xl font-bold mb-2\">Details</h2>\n              <p>{modalContent}</p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SearchWindow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}