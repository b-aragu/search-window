{"ast":null,"code":"var _jsxFileName = \"/home/baragu/Documents/search window/src/components/SearchWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n// Mock data for testing (Replace this with API data if needed)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockData = [\"Dental Cleaning\", \"Tooth Whitening\", \"Root Canal\", \"Braces\", \"Cavities\", \"Oral Surgery\", \"Gum Disease\", \"Tooth Extraction\"];\nconst SearchWindow = () => {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const handleSearch = event => {\n    const value = event.target.value;\n    setQuery(value);\n    if (value.length > 0) {\n      const filteredResults = mockData.filter(item => item.toLowerCase().includes(value.toLowerCase()));\n      setResults(filteredResults);\n    } else {\n      setResults([]);\n    }\n  };\n\n  // Function to highlight the matched text\n  const highlightMatch = (text, query) => {\n    const regex = new RegExp(`(${query})`, \"gi\");\n    const parts = text.split(regex);\n    return parts.map((part, index) => part.toLowerCase() === query.toLowerCase() ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"font-semibold text-blue-600\",\n      children: part\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : part);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center mt-10\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full max-w-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: handleSearch,\n        className: \"w-full p-4 border border-blue-300 rounded-lg shadow-md focus:outline-none focus:ring-2 focus:ring-blue-400 transition duration-300 ease-in-out hover:shadow-lg bg-blue-50\",\n        placeholder: \"Search for dental topics...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"absolute z-10 w-full mt-2 bg-white border border-gray-200 rounded-lg shadow-lg animate-fadeIn\",\n        children: results.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"p-3 border-b border-gray-100 cursor-pointer hover:bg-blue-100 transition duration-300 ease-in-out transform hover:scale-105\",\n          children: highlightMatch(item, query)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchWindow, \"Grp0ouI1isRc8g0LMx1FfgxNSWM=\");\n_c = SearchWindow;\nexport default SearchWindow;\nvar _c;\n$RefreshReg$(_c, \"SearchWindow\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","mockData","SearchWindow","_s","query","setQuery","results","setResults","handleSearch","event","value","target","length","filteredResults","filter","item","toLowerCase","includes","highlightMatch","text","regex","RegExp","parts","split","map","part","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/home/baragu/Documents/search window/src/components/SearchWindow.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\n// Mock data for testing (Replace this with API data if needed)\nconst mockData = [\"Dental Cleaning\", \"Tooth Whitening\", \"Root Canal\", \"Braces\", \"Cavities\", \"Oral Surgery\", \"Gum Disease\", \"Tooth Extraction\"];\n\nconst SearchWindow = () => {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n\n  const handleSearch = (event) => {\n    const value = event.target.value;\n    setQuery(value);\n\n    if (value.length > 0) {\n      const filteredResults = mockData.filter((item) =>\n        item.toLowerCase().includes(value.toLowerCase())\n      );\n      setResults(filteredResults);\n    } else {\n      setResults([]);\n    }\n  };\n\n  // Function to highlight the matched text\n  const highlightMatch = (text, query) => {\n    const regex = new RegExp(`(${query})`, \"gi\");\n    const parts = text.split(regex);\n    return parts.map((part, index) =>\n      part.toLowerCase() === query.toLowerCase() ? (\n        <span key={index} className=\"font-semibold text-blue-600\">{part}</span>\n      ) : (\n        part\n      )\n    );\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center mt-10\">\n      <div className=\"relative w-full max-w-lg\">\n        <input\n          type=\"text\"\n          value={query}\n          onChange={handleSearch}\n          className=\"w-full p-4 border border-blue-300 rounded-lg shadow-md focus:outline-none focus:ring-2 focus:ring-blue-400 transition duration-300 ease-in-out hover:shadow-lg bg-blue-50\"\n          placeholder=\"Search for dental topics...\"\n        />\n        {results.length > 0 && (\n          <ul className=\"absolute z-10 w-full mt-2 bg-white border border-gray-200 rounded-lg shadow-lg animate-fadeIn\">\n            {results.map((item, index) => (\n              <li\n                key={index}\n                className=\"p-3 border-b border-gray-100 cursor-pointer hover:bg-blue-100 transition duration-300 ease-in-out transform hover:scale-105\"\n              >\n                {highlightMatch(item, query)}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchWindow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}