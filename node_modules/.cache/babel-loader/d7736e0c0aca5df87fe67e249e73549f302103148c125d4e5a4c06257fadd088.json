{"ast":null,"code":"var _jsxFileName = \"/home/baragu/Documents/search window/src/components/Modal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { FiMic, FiMicOff } from 'react-icons/fi'; // For microphone icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  isOpen,\n  closeModal,\n  title,\n  content\n}) => {\n  _s();\n  const [isReading, setIsReading] = useState(false);\n  const speechSynthesis = window.speechSynthesis;\n\n  // Function to handle starting/stopping the reading\n  const toggleSpeech = () => {\n    if (isReading) {\n      speechSynthesis.cancel(); // Stop reading\n      setIsReading(false);\n    } else {\n      const utterance = new SpeechSynthesisUtterance(`${title}. ${content}`);\n      utterance.lang = 'en-US'; // Set the language to English\n      utterance.volume = 1; // Set volume\n      utterance.rate = 1; // Set normal speed\n      utterance.pitch = 1; // Set normal pitch\n\n      // Ensure the full content is read\n      speechSynthesis.speak(utterance); // Start reading\n      setIsReading(true);\n\n      // Reset the reading state when finished\n      utterance.onend = () => {\n        setIsReading(false);\n      };\n      utterance.onerror = event => {\n        console.error(\"Speech synthesis error:\", event.error);\n        setIsReading(false);\n      };\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-gray-900 bg-opacity-50 backdrop-blur-md flex items-center justify-center z-50 overflow-y-auto transition-opacity duration-300 ease-out\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg p-6 max-w-lg w-full mx-4 shadow-2xl transform transition-transform duration-300 ease-out scale-100 sm:scale-95 relative max-h-screen overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        className: \"absolute top-0 right-0 mt-4 mr-4 text-gray-400 hover:text-gray-700 transition-colors duration-200 ease-in-out\",\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-indigo-800 text-3xl font-extrabold mb-4 border-b pb-2\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-700 prose prose-indigo\",\n          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleSpeech,\n        className: \"absolute bottom-4 right-4 p-2 bg-indigo-500 text-white rounded-full shadow-md hover:bg-indigo-700 transition\",\n        \"aria-label\": \"Toggle speech\",\n        children: [isReading ? /*#__PURE__*/_jsxDEV(FiMicOff, {\n          className: \"h-6 w-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(FiMic, {\n          className: \"h-6 w-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 59\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Modal, \"gv8HBbHHJmWiOqOOw59BNVcGB3o=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","ReactMarkdown","FiMic","FiMicOff","jsxDEV","_jsxDEV","Modal","isOpen","closeModal","title","content","_s","isReading","setIsReading","speechSynthesis","window","toggleSpeech","cancel","utterance","SpeechSynthesisUtterance","lang","volume","rate","pitch","speak","onend","onerror","event","console","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/baragu/Documents/search window/src/components/Modal.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { FiMic, FiMicOff } from 'react-icons/fi'; // For microphone icons\n\nconst Modal = ({ isOpen, closeModal, title, content }) => {\n  const [isReading, setIsReading] = useState(false);\n  const speechSynthesis = window.speechSynthesis;\n\n  // Function to handle starting/stopping the reading\n  const toggleSpeech = () => {\n    if (isReading) {\n      speechSynthesis.cancel(); // Stop reading\n      setIsReading(false);\n    } else {\n      const utterance = new SpeechSynthesisUtterance(`${title}. ${content}`);\n      utterance.lang = 'en-US'; // Set the language to English\n      utterance.volume = 1; // Set volume\n      utterance.rate = 1; // Set normal speed\n      utterance.pitch = 1; // Set normal pitch\n      \n      // Ensure the full content is read\n      speechSynthesis.speak(utterance); // Start reading\n      setIsReading(true);\n\n      // Reset the reading state when finished\n      utterance.onend = () => {\n        setIsReading(false);\n      };\n\n      utterance.onerror = (event) => {\n        console.error(\"Speech synthesis error:\", event.error);\n        setIsReading(false);\n      };\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-gray-900 bg-opacity-50 backdrop-blur-md flex items-center justify-center z-50 overflow-y-auto transition-opacity duration-300 ease-out\">\n      <div className=\"bg-white rounded-lg p-6 max-w-lg w-full mx-4 shadow-2xl transform transition-transform duration-300 ease-out scale-100 sm:scale-95 relative max-h-screen overflow-y-auto\">\n        {/* Close button */}\n        <button\n          onClick={closeModal}\n          className=\"absolute top-0 right-0 mt-4 mr-4 text-gray-400 hover:text-gray-700 transition-colors duration-200 ease-in-out\"\n        >\n          &#10005;\n        </button>\n        \n        {/* Modal Content */}\n        <div className=\"text-lg\">\n          <h2 className=\"text-indigo-800 text-3xl font-extrabold mb-4 border-b pb-2\">{title}</h2>\n          <div className=\"text-gray-700 prose prose-indigo\">\n            <ReactMarkdown>{content}</ReactMarkdown>\n          </div>\n        </div>\n\n        {/* Microphone button to toggle reading */}\n        <button\n          onClick={toggleSpeech}\n          className=\"absolute bottom-4 right-4 p-2 bg-indigo-500 text-white rounded-full shadow-md hover:bg-indigo-700 transition\"\n          aria-label=\"Toggle speech\"\n        >\n          {isReading ? <FiMicOff className=\"h-6 w-6\" /> : <FiMic className=\"h-6 w-6\" />} {/* Initial state shows FiMicOff */}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}