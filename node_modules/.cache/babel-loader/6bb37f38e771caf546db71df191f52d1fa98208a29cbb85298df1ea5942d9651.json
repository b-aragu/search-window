{"ast":null,"code":"var _jsxFileName = \"/home/baragu/Documents/search window/src/components/SearchWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport sanityClient from \"@sanity/client\";\nimport searchIcon from '../assets/image.png';\nimport micIcon from '../assets/oral.png';\nimport Modal from './Modal';\n\n// Initialize Sanity client\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = sanityClient({\n  projectId: \"x98ssp32\",\n  dataset: \"production\",\n  apiVersion: \"2021-08-31\",\n  useCdn: true\n});\nconst SearchWindow = () => {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalContent, setModalContent] = useState(\"\");\n  const [modalTitle, setModalTitle] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isListening, setIsListening] = useState(false);\n\n  // Speech recognition initialization\n  const speechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n  const recognition = new speechRecognition();\n  recognition.lang = 'en-US';\n  recognition.continuous = false;\n  recognition.interimResults = false;\n  const startListening = () => {\n    setIsListening(true);\n    recognition.start();\n    recognition.onresult = event => {\n      const spokenQuery = event.results[0][0].transcript;\n      setQuery(spokenQuery);\n    };\n    recognition.onspeechend = () => {\n      setIsListening(false);\n      recognition.stop();\n    };\n    recognition.onerror = event => {\n      console.error(\"Speech recognition error:\", event.error);\n      setIsListening(false);\n    };\n  };\n\n  // Fetch data from Sanity as the user types\n  useEffect(() => {\n    const fetchResults = async () => {\n      if (query.trim() === \"\") {\n        setResults([]);\n        return;\n      }\n      setLoading(true);\n      try {\n        const queryStr = `*[_type in [\"dentalTopics\", \"faq\", \"articles\"] && (title match \"${query}*\" || question match \"${query}*\")]{\n          title,\n          question,\n          description,\n          content,\n          answer,\n          _id\n        }`;\n        const fetchedResults = await client.fetch(queryStr);\n        setResults(fetchedResults);\n        setError(\"\");\n      } catch (error) {\n        console.error(\"Error fetching from Sanity:\", error);\n        setError(\"Error fetching results, please try again later.\");\n      }\n      setLoading(false);\n    };\n    fetchResults();\n  }, [query]);\n  const handleSearch = async (searchQuery = query) => {\n    if (searchQuery.trim() === \"\") {\n      setError(\"Please enter a valid dental search term\");\n      return;\n    }\n    setError(\"\");\n    await fetchFromGroqBackend(searchQuery);\n  };\n  const fetchFromGroqBackend = async searchQuery => {\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/groq\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          query: searchQuery\n        })\n      });\n      const data = await response.json();\n      const aiResult = {\n        _id: \"ai-response\",\n        title: searchQuery,\n        description: data.aiResponse || \"No valid response from AI.\"\n      };\n      setResults(prevResults => [...prevResults, aiResult]);\n      setError(\"\");\n    } catch (error) {\n      console.error(\"Error fetching AI response from backend:\", error);\n      setError(\"Error fetching AI response, please try again later.\");\n    }\n    setLoading(false);\n  };\n  const openModal = (title, content) => {\n    setModalTitle(title);\n    setModalContent(content);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalContent(\"\");\n    setModalTitle(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center mt-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full max-w-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center border border-indigo-500 rounded-lg shadow-md focus-within:ring-2 focus-within:ring-indigo-400 transition duration-300 ease-in-out bg-tranquil-mist\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          className: \"w-full p-4 outline-none bg-transparent\",\n          placeholder: \"Search dental topics...\",\n          \"aria-label\": \"Search for dental topics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mr-2 animate-spin rounded-full h-6 w-6 border-t-2 border-b-2 border-indigo-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSearch,\n          className: \"px-4 py-2 bg-royal-velvet text-white rounded-r-lg transition duration-300 transform active:scale-110\",\n          \"aria-label\": \"Submit Search\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: searchIcon,\n            alt: \"Search Icon\",\n            className: \"h-12 w-12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startListening,\n          className: \"ml-2 p-2 transition duration-300 transform active:scale-110\",\n          \"aria-label\": \"Voice Search\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: micIcon,\n            alt: \"Microphone Icon\",\n            className: \"h-12 w-12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"max-h-80 overflow-y-auto absolute z-10 w-full mt-4 bg-crystal-snow border border-indigo-200 rounded-lg shadow-lg\",\n        children: results.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"p-4 border-b border-gray-100 cursor-pointer hover:bg-serene-sky transition duration-300 ease-in-out\",\n          onClick: () => openModal(item.title || item.question, item.description || item.content || item.answer),\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"text-indigo-900\",\n            children: item.title || item.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this)\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4 text-red-500\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      closeModal: closeModal,\n      title: modalTitle,\n      content: modalContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchWindow, \"NzJpjcApAyrCHFB++N24+vsyOL4=\");\n_c = SearchWindow;\nexport default SearchWindow;\nvar _c;\n$RefreshReg$(_c, \"SearchWindow\");","map":{"version":3,"names":["React","useState","useEffect","sanityClient","searchIcon","micIcon","Modal","jsxDEV","_jsxDEV","client","projectId","dataset","apiVersion","useCdn","SearchWindow","_s","query","setQuery","results","setResults","loading","setLoading","isModalOpen","setIsModalOpen","modalContent","setModalContent","modalTitle","setModalTitle","error","setError","isListening","setIsListening","speechRecognition","window","SpeechRecognition","webkitSpeechRecognition","recognition","lang","continuous","interimResults","startListening","start","onresult","event","spokenQuery","transcript","onspeechend","stop","onerror","console","fetchResults","trim","queryStr","fetchedResults","fetch","handleSearch","searchQuery","fetchFromGroqBackend","response","method","headers","body","JSON","stringify","data","json","aiResult","_id","title","description","aiResponse","prevResults","openModal","content","closeModal","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","length","map","item","question","answer","isOpen","_c","$RefreshReg$"],"sources":["/home/baragu/Documents/search window/src/components/SearchWindow.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport sanityClient from \"@sanity/client\";\nimport searchIcon from '../assets/image.png';\nimport micIcon from '../assets/oral.png';\nimport Modal from './Modal'; \n\n// Initialize Sanity client\nconst client = sanityClient({\n  projectId: \"x98ssp32\", \n  dataset: \"production\", \n  apiVersion: \"2021-08-31\",\n  useCdn: true,\n});\n\nconst SearchWindow = () => {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalContent, setModalContent] = useState(\"\");\n  const [modalTitle, setModalTitle] = useState(\"\"); \n  const [error, setError] = useState(\"\");\n  const [isListening, setIsListening] = useState(false);\n\n  // Speech recognition initialization\n  const speechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n  const recognition = new speechRecognition();\n\n  recognition.lang = 'en-US';\n  recognition.continuous = false;\n  recognition.interimResults = false;\n\n  const startListening = () => {\n    setIsListening(true);\n    recognition.start();\n\n    recognition.onresult = (event) => {\n      const spokenQuery = event.results[0][0].transcript;\n      setQuery(spokenQuery);\n    };\n\n    recognition.onspeechend = () => {\n      setIsListening(false);\n      recognition.stop();\n    };\n\n    recognition.onerror = (event) => {\n      console.error(\"Speech recognition error:\", event.error);\n      setIsListening(false);\n    };\n  };\n\n  // Fetch data from Sanity as the user types\n  useEffect(() => {\n    const fetchResults = async () => {\n      if (query.trim() === \"\") {\n        setResults([]);\n        return;\n      }\n\n      setLoading(true);\n      try {\n        const queryStr = `*[_type in [\"dentalTopics\", \"faq\", \"articles\"] && (title match \"${query}*\" || question match \"${query}*\")]{\n          title,\n          question,\n          description,\n          content,\n          answer,\n          _id\n        }`;\n\n        const fetchedResults = await client.fetch(queryStr);\n        setResults(fetchedResults);\n        setError(\"\");\n      } catch (error) {\n        console.error(\"Error fetching from Sanity:\", error);\n        setError(\"Error fetching results, please try again later.\");\n      }\n      setLoading(false);\n    };\n\n    fetchResults();\n  }, [query]);\n\n  const handleSearch = async (searchQuery = query) => {\n    if (searchQuery.trim() === \"\") {\n      setError(\"Please enter a valid dental search term\");\n      return;\n    }\n    setError(\"\");\n    await fetchFromGroqBackend(searchQuery);\n  };\n\n  const fetchFromGroqBackend = async (searchQuery) => {\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/groq\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ query: searchQuery }),\n      });\n\n      const data = await response.json();\n      const aiResult = {\n        _id: \"ai-response\",\n        title: searchQuery, \n        description: data.aiResponse || \"No valid response from AI.\",\n      };\n\n      setResults((prevResults) => [...prevResults, aiResult]);\n      setError(\"\");\n    } catch (error) {\n      console.error(\"Error fetching AI response from backend:\", error);\n      setError(\"Error fetching AI response, please try again later.\");\n    }\n    setLoading(false);\n  };\n\n  const openModal = (title, content) => {\n    setModalTitle(title);\n    setModalContent(content);\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalContent(\"\");\n    setModalTitle(\"\");\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center mt-10\">\n      <div className=\"relative w-full max-w-lg\">\n        <div className=\"flex items-center border border-indigo-500 rounded-lg shadow-md focus-within:ring-2 focus-within:ring-indigo-400 transition duration-300 ease-in-out bg-tranquil-mist\">\n          <input\n            type=\"text\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            className=\"w-full p-4 outline-none bg-transparent\"\n            placeholder=\"Search dental topics...\"\n            aria-label=\"Search for dental topics\"\n          />\n\n          {loading && (\n            <div className=\"flex items-center justify-center\">\n              <div className=\"mr-2 animate-spin rounded-full h-6 w-6 border-t-2 border-b-2 border-indigo-500\"></div>\n            </div>\n          )}\n\n          {/* Search Button */}\n          <button\n            onClick={handleSearch}\n            className=\"px-4 py-2 bg-royal-velvet text-white rounded-r-lg transition duration-300 transform active:scale-110\"\n            aria-label=\"Submit Search\"\n          >\n            <img src={searchIcon} alt=\"Search Icon\" className=\"h-12 w-12\" />\n          </button>\n\n          {/* Microphone Button */}\n          <button\n            onClick={startListening}\n            className=\"ml-2 p-2 transition duration-300 transform active:scale-110\"\n            aria-label=\"Voice Search\"\n          >\n            <img src={micIcon} alt=\"Microphone Icon\" className=\"h-12 w-12\" />\n          </button>\n        </div>\n\n        {results.length > 0 && (\n          <ul className=\"max-h-80 overflow-y-auto absolute z-10 w-full mt-4 bg-crystal-snow border border-indigo-200 rounded-lg shadow-lg\">\n            {results.map((item) => (\n              <li\n                key={item._id}\n                className=\"p-4 border-b border-gray-100 cursor-pointer hover:bg-serene-sky transition duration-300 ease-in-out\"\n                onClick={() => openModal(item.title || item.question, item.description || item.content || item.answer)}\n              >\n                <strong className=\"text-indigo-900\">{item.title || item.question}</strong>\n              </li>\n            ))}\n          </ul>\n        )}\n\n        {error && <p className=\"mt-4 text-red-500\">{error}</p>}\n      </div>\n\n      <Modal\n        isOpen={isModalOpen}\n        closeModal={closeModal}\n        title={modalTitle}\n        content={modalContent}\n      />\n    </div>\n  );\n};\n\nexport default SearchWindow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}