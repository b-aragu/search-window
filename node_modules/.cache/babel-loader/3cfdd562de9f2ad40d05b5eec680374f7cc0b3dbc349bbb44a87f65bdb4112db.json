{"ast":null,"code":"var _jsxFileName = \"/home/baragu/Documents/search window/src/components/SearchWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport sanityClient from \"@sanity/client\";\n\n// Initialize Sanity client\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = sanityClient({\n  projectId: \"x98ssp32\",\n  // Replace with your Sanity project ID\n  dataset: \"production\",\n  // Dataset name\n  apiVersion: \"2021-08-31\",\n  // API version date\n  useCdn: true // Use CDN for faster response times\n});\nconst SearchWindow = () => {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [aiResponse, setAiResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // Function to fetch from Sanity using GROQ (automatic search on input change)\n  useEffect(() => {\n    const fetchEntries = async () => {\n      if (query.length > 0) {\n        const queryStr = `*[_type in [\"dentalTopics\", \"faq\", \"articles\"] && (title match \"${query}*\" || question match \"${query}*\")]{\n          title,\n          question,\n          description,\n          content,\n          answer,\n          _id\n        }`;\n        try {\n          const results = await client.fetch(queryStr);\n          setResults(results);\n        } catch (error) {\n          console.error(\"Error fetching from Sanity:\", error);\n        }\n      } else {\n        setResults([]);\n      }\n    };\n    fetchEntries();\n  }, [query]); // Fetch data every time the query changes\n\n  // Function to fetch AI response from the backend server (which securely calls Groq)\n  const fetchFromGroqBackend = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/groq\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          query\n        }) // Send query to backend\n      });\n      const data = await response.json();\n      setAiResponse(data.aiResponse || \"No valid response from Groq.\");\n    } catch (error) {\n      console.error(\"Error fetching response from backend:\", error);\n      setAiResponse(\"Error fetching response from Groq.\");\n    }\n    setLoading(false);\n  };\n\n  // Choose which AI service to use (currently only Groq is implemented via backend)\n  const fetchLLMResponse = async () => {\n    await fetchFromGroqBackend(); // We are now using Groq via backend API\n  };\n\n  // Handle the search input manually for LLM when user clicks \"Search\"\n  const handleSearch = async () => {\n    await fetchLLMResponse();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center mt-10\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full max-w-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        className: \"w-full p-4 border border-blue-300 rounded-lg shadow-md focus:outline-none focus:ring-2 focus:ring-blue-400 transition duration-300 ease-in-out hover:shadow-lg bg-blue-50\",\n        placeholder: \"Search dental topics...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        className: \"mt-4 px-4 py-2 bg-blue-500 text-white rounded-lg shadow-md hover:bg-blue-600 transition\",\n        children: \"Get AI Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"absolute z-10 w-full mt-2 bg-white border border-gray-200 rounded-lg shadow-lg\",\n        children: results.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"p-3 border-b border-gray-100 cursor-pointer hover:bg-blue-100 transition duration-300 ease-in-out\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: item.title || item.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 64\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.description || item.content || item.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), aiResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 p-4 bg-gray-100 border border-gray-300 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"AI Response:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: aiResponse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading AI response...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchWindow, \"+X8Y7pE5FcI6M0dtgd5IS+TzrTI=\");\n_c = SearchWindow;\nexport default SearchWindow;\nvar _c;\n$RefreshReg$(_c, \"SearchWindow\");","map":{"version":3,"names":["React","useState","useEffect","sanityClient","jsxDEV","_jsxDEV","client","projectId","dataset","apiVersion","useCdn","SearchWindow","_s","query","setQuery","results","setResults","aiResponse","setAiResponse","loading","setLoading","fetchEntries","length","queryStr","fetch","error","console","fetchFromGroqBackend","response","method","headers","body","JSON","stringify","data","json","fetchLLMResponse","handleSearch","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","item","title","question","description","content","answer","_id","_c","$RefreshReg$"],"sources":["/home/baragu/Documents/search window/src/components/SearchWindow.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport sanityClient from \"@sanity/client\";\n\n// Initialize Sanity client\nconst client = sanityClient({\n  projectId: \"x98ssp32\", // Replace with your Sanity project ID\n  dataset: \"production\", // Dataset name\n  apiVersion: \"2021-08-31\", // API version date\n  useCdn: true, // Use CDN for faster response times\n});\n\nconst SearchWindow = () => {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [aiResponse, setAiResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // Function to fetch from Sanity using GROQ (automatic search on input change)\n  useEffect(() => {\n    const fetchEntries = async () => {\n      if (query.length > 0) {\n        const queryStr = `*[_type in [\"dentalTopics\", \"faq\", \"articles\"] && (title match \"${query}*\" || question match \"${query}*\")]{\n          title,\n          question,\n          description,\n          content,\n          answer,\n          _id\n        }`;\n\n        try {\n          const results = await client.fetch(queryStr);\n          setResults(results);\n        } catch (error) {\n          console.error(\"Error fetching from Sanity:\", error);\n        }\n      } else {\n        setResults([]);\n      }\n    };\n\n    fetchEntries();\n  }, [query]); // Fetch data every time the query changes\n\n  // Function to fetch AI response from the backend server (which securely calls Groq)\n  const fetchFromGroqBackend = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/groq\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ query }), // Send query to backend\n      });\n\n      const data = await response.json();\n      setAiResponse(data.aiResponse || \"No valid response from Groq.\");\n    } catch (error) {\n      console.error(\"Error fetching response from backend:\", error);\n      setAiResponse(\"Error fetching response from Groq.\");\n    }\n    setLoading(false);\n  };\n\n  // Choose which AI service to use (currently only Groq is implemented via backend)\n  const fetchLLMResponse = async () => {\n    await fetchFromGroqBackend(); // We are now using Groq via backend API\n  };\n\n  // Handle the search input manually for LLM when user clicks \"Search\"\n  const handleSearch = async () => {\n    await fetchLLMResponse();\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center mt-10\">\n      <div className=\"relative w-full max-w-lg\">\n        <input\n          type=\"text\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          className=\"w-full p-4 border border-blue-300 rounded-lg shadow-md focus:outline-none focus:ring-2 focus:ring-blue-400 transition duration-300 ease-in-out hover:shadow-lg bg-blue-50\"\n          placeholder=\"Search dental topics...\"\n        />\n        <button\n          onClick={handleSearch}\n          className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded-lg shadow-md hover:bg-blue-600 transition\"\n        >\n          Get AI Response\n        </button>\n\n        {results.length > 0 && (\n          <ul className=\"absolute z-10 w-full mt-2 bg-white border border-gray-200 rounded-lg shadow-lg\">\n            {results.map((item) => (\n              <li key={item._id} className=\"p-3 border-b border-gray-100 cursor-pointer hover:bg-blue-100 transition duration-300 ease-in-out\">\n                <strong>{item.title || item.question}</strong> <br />\n                <span>{item.description || item.content || item.answer}</span>\n              </li>\n            ))}\n          </ul>\n        )}\n\n        {aiResponse && (\n          <div className=\"mt-4 p-4 bg-gray-100 border border-gray-300 rounded-lg shadow-md\">\n            <strong>AI Response:</strong> <br />\n            <p>{aiResponse}</p>\n          </div>\n        )}\n\n        {loading && <p>Loading AI response...</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchWindow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}