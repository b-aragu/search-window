{"ast":null,"code":"var _jsxFileName = \"/home/baragu/Documents/search window/src/components/SearchWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport sanityClient from \"@sanity/client\";\n\n// Initialize Sanity client\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = sanityClient({\n  projectId: \"x98ssp32\",\n  // Replace with your Sanity project ID\n  dataset: \"production\",\n  // Dataset name (typically 'production')\n  apiVersion: \"2021-08-31\",\n  // API version date (adjust as needed)\n  useCdn: true // Use CDN for faster response times\n});\nconst SearchWindow = () => {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n\n  // Function to fetch entries from Sanity using GROQ\n  const fetchEntries = async searchQuery => {\n    const query = `*[\n      (_type == \"dentalTopics\" && title match \"${searchQuery}*\") ||\n      (_type == \"faq\" && question match \"${searchQuery}*\") ||\n      (_type == \"articles\" && content match \"${searchQuery}*\")\n    ]{\n      title,\n      question,\n      content,\n      description,\n      _id\n    }`;\n    const results = await client.fetch(query);\n    setResults(results); // Update the state with fetched results\n  };\n\n  // Handle the search input and trigger fetching of data\n  const handleSearch = event => {\n    const value = event.target.value;\n    setQuery(value);\n    if (value.length > 0) {\n      fetchEntries(value);\n    } else {\n      setResults([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center mt-10\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full max-w-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: handleSearch,\n        className: \"w-full p-4 border border-blue-300 rounded-lg shadow-md focus:outline-none focus:ring-2 focus:ring-blue-400 transition duration-300 ease-in-out hover:shadow-lg bg-blue-50\",\n        placeholder: \"Search dental content...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"absolute z-10 w-full mt-2 bg-white border border-gray-200 rounded-lg shadow-lg\",\n        children: results.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"p-3 border-b border-gray-100 cursor-pointer hover:bg-blue-100 transition duration-300 ease-in-out\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: item.title || item.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 64\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.description || item.content || item.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchWindow, \"Grp0ouI1isRc8g0LMx1FfgxNSWM=\");\n_c = SearchWindow;\nexport default SearchWindow;\nvar _c;\n$RefreshReg$(_c, \"SearchWindow\");","map":{"version":3,"names":["React","useState","sanityClient","jsxDEV","_jsxDEV","client","projectId","dataset","apiVersion","useCdn","SearchWindow","_s","query","setQuery","results","setResults","fetchEntries","searchQuery","fetch","handleSearch","event","value","target","length","className","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","item","title","question","description","content","answer","_id","_c","$RefreshReg$"],"sources":["/home/baragu/Documents/search window/src/components/SearchWindow.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport sanityClient from \"@sanity/client\";\n\n// Initialize Sanity client\nconst client = sanityClient({\n  projectId: \"x98ssp32\", // Replace with your Sanity project ID\n  dataset: \"production\", // Dataset name (typically 'production')\n  apiVersion: \"2021-08-31\", // API version date (adjust as needed)\n  useCdn: true, // Use CDN for faster response times\n});\n\nconst SearchWindow = () => {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n\n  // Function to fetch entries from Sanity using GROQ\n  const fetchEntries = async (searchQuery) => {\n    const query = `*[\n      (_type == \"dentalTopics\" && title match \"${searchQuery}*\") ||\n      (_type == \"faq\" && question match \"${searchQuery}*\") ||\n      (_type == \"articles\" && content match \"${searchQuery}*\")\n    ]{\n      title,\n      question,\n      content,\n      description,\n      _id\n    }`;\n  \n    const results = await client.fetch(query);\n    setResults(results); // Update the state with fetched results\n  };\n  \n  \n\n  // Handle the search input and trigger fetching of data\n  const handleSearch = (event) => {\n    const value = event.target.value;\n    setQuery(value);\n\n    if (value.length > 0) {\n      fetchEntries(value);\n    } else {\n      setResults([]);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center mt-10\">\n      <div className=\"relative w-full max-w-lg\">\n        <input\n          type=\"text\"\n          value={query}\n          onChange={handleSearch}\n          className=\"w-full p-4 border border-blue-300 rounded-lg shadow-md focus:outline-none focus:ring-2 focus:ring-blue-400 transition duration-300 ease-in-out hover:shadow-lg bg-blue-50\"\n          placeholder=\"Search dental content...\"\n        />\n        {results.length > 0 && (\n          <ul className=\"absolute z-10 w-full mt-2 bg-white border border-gray-200 rounded-lg shadow-lg\">\n            {results.map((item) => (\n              <li\n                key={item._id}\n                className=\"p-3 border-b border-gray-100 cursor-pointer hover:bg-blue-100 transition duration-300 ease-in-out\"\n              >\n                <strong>{item.title || item.question}</strong> <br />\n                <span>{item.description || item.content || item.answer}</span>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n  \n};\n\nexport default SearchWindow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}